function [rho,info] = computeRhoFeasBilinearAlternation(V,xdot)

global t x

prog = mssprog;

Vdot = diff(V,t) + diff(V,x)*xdot;
Lxmonom = monomials(x,0:deg(Vdot,x)-deg(V,x));

rho = 1;  %guess
[prog,l] = new(prog,length(Lxmonom),'free');
L1 = l'*Lxmonom;
prog.sos = -(Vdot + L1*(rho - V));

opt = -1;  % +1: minimize the cost function; -1: maximize the cost function; 0: solve a feasibility problem (no cost function)

[prog,info] = sedumi(prog,[L1],0,[],opt);
L1 = prog([rho]);

rho = msspoly('rho',1);
prog.psd = rho;
[prog,l] = new(prog,length(Lxmonom),'free');
L1 = l'*Lxmonom;
prog.sos = -(Vdot + L1*(rho - V));

opt = 0;  % +1: minimize the cost function; -1: maximize the cost function; 0: solve a feasibility problem (no cost function)
    
[prog,info] = sedumi(prog,rho,0,[],opt);
if info.pinf
    disp('fail.')
    rho = 1e9;
else
    rho = double(prog([rho]))
end


end
